package views.screen.payment;

import java.io.IOException;
import java.net.URL;
import java.util.Map;
import java.util.ResourceBundle;

import configs.Path;
import controller.BikeController;
import controller.PaymentController;
import controller.StationController;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import model.BikeModel;
import model.PaymentModel;
import model.StationModel;
import utils.Configs;
import views.screen.BaseScreenHandler;
import views.screen.bike.BikeScreenHandler;
import views.screen.result.ResultScreenHandler;

public class PaymentScreenHandler extends BaseScreenHandler implements Initializable {
	
	@FXML
	private TextField tfCardNumber;
	@FXML
	private TextField tfHolderName;
	@FXML
	private TextField tfExpirationDate;
	@FXML
	private TextField tfSecurityCode;
	@FXML
	private Label lbAmount;

	private BikeModel bike;
	public PaymentScreenHandler(Stage stage, String screenPath, BikeModel bike) throws IOException {
		super(stage, screenPath);
		this.bike = bike;
		lbAmount.setText(calDeposit(bike.getType()).toString());
		System.out.println(bike.getName());
		// TODO Auto-generated constructor stub
	}
	// Event Listener on Button[#btnConfirmPayment].onMouseClicked
	@FXML
	public void onConfirm(MouseEvent event) throws IOException {
		
		// call api thanh toan
		String contents = "pay order";
		PaymentController ctrl = new PaymentController();
		BikeController bikeController = new BikeController();
		StationController stationController = new StationController(); 
		Map<String, String> response = ctrl.payOrder(bike.getCost(), contents, tfCardNumber.getText(), tfHolderName.getText(),
				tfExpirationDate.getText(), tfSecurityCode.getText());
		
		if(response.get("RESULT").equals("PAYMENT SUCCESSFUL!")) {
			// update bike, station
			bike.setStatus(1);
			bikeController.updateBike(bike);
			
			StationModel station = new StationModel();
			station = stationController.findById(bike.getId_station());
			station.setNum_of_empty_docks(station.getNum_of_empty_docks() + 1);
			if(bike.getType().equals("standard")) {
				station.setNum_of_bikes(station.getNum_of_bikes() - 1);
			}
			else if(bike.getType().equals("electric")) {
				station.setNum_of_ebikes(station.getNum_of_ebikes() - 1);
			}
			else station.setNum_of_twinbikes(station.getNum_of_twinbikes() - 1);
			stationController.updateStation(station);
			// insert payment
			PaymentModel newPayment = new PaymentModel();
			newPayment.setId_bike(bike.getId());
			newPayment.setId_station_rent(bike.getId_station());
			newPayment.setDeposit_card_number(tfCardNumber.getText());
			newPayment.setStatus(1);
			newPayment.setDeposit_price(calDeposit(bike.getType()));
			ctrl.savePayment(newPayment);
		}
		BaseScreenHandler resultScreen = new ResultScreenHandler(this.stage, Configs.RESULT_SCREEN_PATH, response.get("RESULT"), response.get("MESSAGE") );
		resultScreen.setPreviousScreen(this);
		resultScreen.setScreenTitle("Result Screen");
		resultScreen.show();
	}
	// Event Listener on Button[#btnBack].onMouseClicked
	@FXML
	public void onBack(MouseEvent event) throws IOException {
		// TODO Autogenerated
		BikeScreenHandler bikeScreenHandler = new BikeScreenHandler(stage, Path.BIKE, bike);
		bikeScreenHandler.setScreenTitle("Bike Screen");
		bikeScreenHandler.show();
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		
	}
	private Integer calDeposit(String type) {
		if(type.equals("standard")){
			return 400000;
		}
		else if(type.equals("electric")) {
			return 700000;
		}
		else return 550000;
	}
}
